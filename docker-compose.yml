version: '3.8'

services:
  # Redis for Celery broker and result backend
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  # Main Flask application
  flask-app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=sqlite:///app.db
      - SECRET_KEY=dev-secret-key-change-in-production
      - CORS_ORIGINS=*
      - RATE_LIMIT_ENABLED=True
      - ENABLE_MONITORING=True
      - ENABLE_CELERY=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./data:/app/data
      - ./log:/app/log
      - ./app.db:/app/app.db
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery worker for background tasks
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_worker.celery worker --loglevel=info --concurrency=2
    restart: always
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=sqlite:///app.db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENABLE_CELERY=True
    volumes:
      - ./data:/app/data
      - ./log:/app/log
      - ./app.db:/app/app.db
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "celery -A celery_worker.celery inspect ping -d celery@$$HOSTNAME || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Celery beat scheduler for periodic tasks (optional)
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_worker.celery beat --loglevel=info
    restart: always
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=sqlite:///app.db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENABLE_CELERY=True
    volumes:
      - ./data:/app/data
      - ./log:/app/log
    depends_on:
      redis:
        condition: service_healthy

  # Flower - Celery monitoring dashboard
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_worker.celery flower --port=5555 --broker=redis://redis:6379/0
    restart: always
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy

volumes:
  redis_data:
    driver: local
