# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ..proto_files import api_pb2 as api__pb2


class APIStub(object):
    """The greeting service definition."""

    def __init__(self, channel):  # type: ignore
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.processRequest = channel.unary_unary(
            "/API/processRequest",
            request_serializer=api__pb2.apiRequest.SerializeToString,  # type: ignore
            response_deserializer=api__pb2.apiResponse.FromString,  # type: ignore
        )


class APIServicer(object):
    """The greeting service definition."""

    def processRequest(self, request, context):  # type: ignore
        """Send a query response"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_APIServicer_to_server(servicer, server):  # type: ignore
    rpc_method_handlers = {
        "processRequest": grpc.unary_unary_rpc_method_handler(
            servicer.processRequest,
            request_deserializer=api__pb2.apiRequest.FromString,  # type: ignore
            response_serializer=api__pb2.apiResponse.SerializeToString,  # type: ignore
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("API", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class API(object):
    """The greeting service definition."""

    @staticmethod
    def processRequest(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/API/processRequest",
            api__pb2.apiRequest.SerializeToString,  # type: ignore
            api__pb2.apiResponse.FromString,  # type: ignore
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
